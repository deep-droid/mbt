# Sys MScript Functions
abort(msg)=$abort('msg')@tooltip:force execution to stop
add(expr1,...)=$add('expr1','expr2')@tooltip:performs addition expr1 + expr2 + ...
addDataSetRow(ds,field,val)=$addDataSetRow('dsID','f1=v1','f2=v2')@tooltip:add a row to data set
addMScriptImpl(javaClass)=$addMScriptImpl('javaClass')@tooltip:add MScript method implementation
addMScriptImpl(javaClass,file)=$addMScriptImpl('javaClass','javaFileName')@tooltip:add MScript method implementation with the supplied java class file name
addTagCheck(...)=$addTagCheck('tag','bool','msg')@tooltip:add requirement coverage
and(expr,expr)=$and('expr','expr')@tooltip:boolean logic AND
Break()=$Break()@tooltip:break out current mscript block
Break(label)=$Break('label')@tooltip:break out a specific mscript block
Break(label,cond)=$Break('label','condition')@tooltip:break out a specific mscript block when condition specified evaluates to true
callURL(url)=$callURL('url')@tooltip:retrieve from an url
callFunc(name)=$callFunc('name')@tooltip:call user defined function without parameters
callFunc(name,params)=$callFunc('name','p1=v1','p2=v2')@tooltip:call user defined function with parameters
checkSeqNum()=$checkSeqNum()@tooltip:retrieve current seqNum without incrementing it
chooseMsg(...)=$chooseMsg('expr','msg1','msg2')@tooltip:return msg1 if expr evalues to true else return msg2
clearAllPathVars()=$clearAllPathVars()@tooltip:clears all variables in the current traversal path 
clearAllVars()=$clearAllVars()@tooltip:clears all user variables 
compare(...)=$compare('expr1','op','expr2')@tooltip:compare expr1 and expr2 using the specified operator 
compare(...,case)=$compare('expr1','op','expr2','true/false')@tooltip:perform case sensitive/insensitive comparison on expr1 and expr2 using the specified operator 
Continue()=$Continue()@tooltip: continue the loop on the immediate while loop
Continue(label)=$Continue('label')@tooltip: continue the loop on the specified while loop
Continue(label,cond)=$Continue('label','condition')@tooltip: continue the loop on the specified while loop when condition specified evaluates to true
countSubstring(str,substr)=$countSubstring('str','substr')@tooltip: count occurrences of substring within a string
dataSetInfo(ds)=$dataSetInfo('ds')@tooltip:retrieve dataset information
date()=$date()@tooltip:retrieve current date
date(delta,format)=$date('delta','format')@tooltip:calculate date based on delta expr and format it using the specified format
datePart(date,part)=$datePart('date','part')@tooltip:extract a specific part of a date
dataSet(ds,...)=$dataSet('dsID','key=val')@tooltip:creates a new data set with the option(s)
dataSource(db,...)=$dataSource('dbName','connString','driverClass','userID','password')@tooltip:defines a new jdbc data source
decrement(name)=$decrement('name')@tooltip:decrement the user variable by 1
dequeue(varName,idx)=$dequeue('varName','idx')@tooltip:removes the first element from the queue (FIFO) 
disableCommentToSeqOut()=$disableCommentToSeqOut()@tooltip:disable auto output of mScript comments to SeqOut file
divide(expr1,expr2)=$divide('expr1','expr2')@tooltip:performs division: expr1 / expr2
dumpExecState()=$dumpExecState()@tooltip:returns a string representing the execution state (variables, dataset)
enableCommentToSeqOut()=$enableCommentToSeqOut()@tooltip:enable auto output of mScript comments to SeqOut file
enqueue(name,val)=$enqueue('name','val')@tooltip:add a value to the queue
evalExpr(expr)=$evalExpr('expr')@tooltip: execute mscript expression 
execSQL(...)=$execSQL('dbId','stmt','colName','delimiter')@tooltip:execute an sql statement and return the value from the specified colName in a string separated bgy the delimited specified 
execTrigger(name)=$execTrigger('triggerName')@tooltip:execute a user defined or system trigger with option to force error if trigger not found
execTrigger(name,err)=$execTrigger('triggerName','errIfNotFound')@tooltip:execute a user defined or system trigger with option to force error if trigger not found 
filterData(...)=$filterData('dsId','removeMatched','cond1','cond2')@tooltip:remove rows from dataset that match or not match the specified conditions and return number of rows removed.
filterDataByThread(...)=$filterDataByThread('dsId')@tooltip:remove all rows from dataset rows match current virtual user id and return number of rows left in the dataset.
genMSC(label,fName)=$genMSC('label','fName')@tooltip:generate Message Sequence Chart (MSC) from model's home state to the current state.
genMSC(label,...,skin)=$genMSC('label','fName','skin')@tooltip:generate Message Sequence Chart (MSC) from model's home state to the current state.
genMSC(label,...,skin,color)=$genMSC('label','fName','skin','bkgcolor')@tooltip:generate Message Sequence Chart (MSC) from model's home state to the current state.
genPath(fName)=$genPath('fName')@tooltip:generate the actual sequence path the model execution has taken from home state to the current state.
getAppURL()=$getAppURL()@tooltip:return AUT App/URL
getBrowser()=$getBrowser()@tooltip:return browser type code selected for the execution
getData(ds,field)=$getData('ds','field')@tooltip:return field value of current row
getData(ds,rowidx,field)=$getData('ds','row','field')@tooltip:return field value of specific row
getDataAllRows(...)=$getDataAllRows('dsId','fieldName')@tooltip:return field values of all rows in a string separated by semi-colon
getDataSetSize(ds)=$getDataSetSize('ds')@tooltip:return row count in the dataset
getDataSetRow(dsId)=$getDataSetRow('dsId')@tooltip:return all field of current row in a string
getDataSetRowNum(dsId)=$getDataSetRowNum('dsId')@tooltip:return current row index in the dataset
getDataSetSize(dsId)=$getDataSetSize('dsId')@tooltip:return row count in the dataset specified
getFuncParam(name)=$getFuncParam('name')@tooltip:retrieve parameter by param name passed to the user function or by position starting at 1 for the first parameter
geNextMCase()=$getNextMCase()@tooltip:returns the next mcase setting set by last $setNextMCase(...) yet to be activated/used by next submodel.
getPluginID()=$getPluginID()@tooltip:return the plugin IDs selected for the execution
getStateProp(prop)=$getStateProp('name')@tooltip:return value for the specified state property
getSysConfig(name)=$getSysConfig('propName')@tooltip:retrieve config parameter (defined in config.properties)
getSysVar(name)=$getSysVar('name')@tooltip:return the value of the system variable
getTransData(name)=$getTransData('name')@tooltip:retrieve data from current transition dataset
getTransProp(name)=$getTransProp('name')@tooltip:return the value for the specified transition property
getTravVar(name)=$getTravVar('name')@tooltip:return the value of traversal (local) variable
getVar(name)=$getVar('name')@tooltip:return the value of user variable
gotoState(stateId)=$gotoState('stateId')@tooltip:force execution to jump from current state to the specified state
gotoTrans(...)=$gotoTrans('stateId','transId')@tooltip:force execution to jump from current state/transition to the specified transition
gotoURL(url)=$gotoURL('url')@tooltip:force the browser to load the web page specified
ifFalseMsg(expr,msg)=$ifFalseMsg('expr','msg')@tooltip:return the specified msg if expr evaluates to false, else return blank
ifTrueMsg(expr,msg)=$ifTrueMsg('expr','msg')@tooltip:return the specified msg if expr evaluates to true, else return blank
ifElseMsg(expr,msg1,msg2)=$ifElseMsg('expr','msg1','msg2')@tooltip:return the specified msg1 if expr evaluates to true, else return msg2
increment(name)=$increment('name')@tooltip:increment the user variable by 1
increment(name,delta)=$increment('name','delta')@tooltip:increment the user variable by the specified delta value
indexOf(expr,substring)=$indexOf('expr','substring')@tooltip:return index of a substring in a string (expr), -1 if not found
indexOf(expr,substring,startIdx)=$indexOf('expr','substring','startIdx')@tooltip:return index of a substring in a string (expr) starting at the position specified, -1 if not found
initCap(text)=$initCap('text')@tooltip:upercase first char of each work (camel case)
isDataSetBegin(dsID)=$isDataSetBegin('dsID')@tooltip:returns true if the dataset is at the first row
isDataSetEnd(dsID)=$isDataSetEnd('dsID')@tooltip:returns true if the dataset is at the last row
isEven(num)=$isEven('num')@tooltip:returns true if num is an even integer
isFalse(expr)=$isFalse('expr')@tooltip:return boolean true if expr evaluates to false
isModelRunning(name)=$isModelRunning('modelName')@tooltip:return boolean true if the model specified is running on the same TestOptimal server 
isMultiThread()=$isMultiThread()@tooltip:return true if the model is running in multi-thread mode. 
isOdd(num)=$isOdd('num')@tooltip:returns true if num is an odd integer
isStackEmpty(varName)=$isStackEmpty('varName')@tooltip:returns true if the stack/queue is empty
isTrue(expr)=$isTrue('expr')@tooltip:return boolean true if expr evaluates to true 
isValidDate(date)=$isValidDate('date')@tooltip:validate a date string
isVarDefined(varName)=$isVarDefined('varName')@tooltip:returns true if the variable has been defined/initialized.
listFuncParams()=$listFuncParams()@tooltip:return all parameters passed to the user function in a string
loadFromDataSource(dsId)=$loadFromDataSource('dsId')@tooltip:force dataset to be loaded from its datasource
loadFromDataSource(dsId,params)=$loadFromDataSource('dsId','p1',...)@tooltip:force dataset to be loaded from its datasource with parameter(s)
log(msg)=$log('msg')@tooltip:writes a log message to MScript Log
log(level,msg)=$log('level','msg')@tooltip:writes a log message to MScript Log
mod(expr1,expr2)=$mod('expr1','expr2')@tooltip:performs Mod expr1 % expr2 and returns the remainder
multiply(expr1,expr2)=$multiply('expr1','expr2')@tooltip:performs multiplication expr1 * expr2
nand(expr,expr)=$and('expr','expr')@tooltip:perform boolean logic NAND on two expressions
nand(expr,expr,expr)=$nand('expr','expr','expr')@tooltip:perform boolean logic NAND on three expressions
negate(bool)=$negate('bool')@tooltip:negate the boolean expression
nextDataSetRow(dsId)=$nextDataSetRow('dsId')@tooltip:advance current row to the next row
nextDataSetRow(dsId,rand)=$nextDataSetRow('dsId','$rand()')@tooltip:randomly select a row and set it to be the current row for the dataset
noOut(expr)=$noOut('text')@tooltip:discards the text string
nor(expr,expr)=$nor('expr','expr')@tooltip:perform boolean logic NOR on two expressions
nor(expr,expr,expr)=$nor('expr','expr','expr')@tooltip:perform boolean logic NOR on three expressions
not(expr)=$not('expr')@tooltip:perform boolean logic NOT
or(expr,expr)=$or('expr','expr')@tooltip:perform boolean logic OR on two expressions
or(expr,expr,expr)=$or('expr','expr','expr')@tooltip:perform boolean logic OR on three expressions
osCmd(cmd)=$osCmd('cmd')@tooltip:execute an OS command synchronously, return when OS command exits
osCmd(cmd,millis)=$osCmd('cmd','timeoutMillis')@tooltip:execute an OS command synchronously, abort execution if it runs over time specified.
osCmd(cmd,millis,log)=$osCmd('cmd','timeoutMillis','logFilePath')@tooltip:execute an OS command synchronously, abort when execution times out, writes output and error from the command to the specified file.
osCmd(cmd,millis)=$osCmd('cmd','millis')@tooltip:execute an OS command synchronously, wait up to the specified milliseconds
osCmdAsynch(cmd)=$osCmdAsynch('cmd')@tooltip:execute an OS command asynchronously
osCmdAsynch(cmd,log)=$osCmdAsynch('cmd','logFilePath')@tooltip:execute an OS command asynchronously and direct command output and error to the file specified.
pauseNext()=$pauseNext()@tooltip:to pause current model execution
peek(name)=$peek('name')@tooltip:return the next value in the specified stack list without causing it to be popped.
peekAt(varName,idx)=$peekAt('varName','idx')@tooltip:returns the element at the specified position (0-based) in the stack (FILO)
pop(name)=$pop('name')@tooltip:return the next value in the specified stack list and remove it from the stack
popAll(name)=$popAll('name')@tooltip:empty the stack list specified
popAt(varName,idx)=$popAt('varName','idx')@tooltip:pops (removes) the element at the specified position (0-based) from the stack (FILO) 
previousDataSetRow(dsId)=$previousDataSetRow('dsId')@tooltip:move current row back one row
push(name,val)=$push('name','value')@tooltip:push the value into the stack list specified
pushAt(varName,idx,val)=$pushAt('varName','idx','val')@tooltip:inserts an element to the stack (FILO) at the specified position (0-based) 
raiseException(level,msg)=$raiseException('L1-L5','failedMessage')@tooltip:Raises exception in the context of current state or transition.
rand()=$rand()@tooltip:return a random number between 0 and 1 using uniform distribution
rand(max)=$rand('max')@tooltip:return a random number between 0 and max specified
rand(min,max)=$rand('min','max')@tooltip:return a random number between min and max specified
rand(...)=$rand('min','max','precision')@tooltip:return a random number between min and max specified with number of precision digits specified
randBool()=$randBool()@tooltip:return a random true/false
replace(...)=$replace('origText','subStr/regExpr','newStr')@tooltip: perform substring replacement
requires(libName)=$requires('libName')@tooltip:imports user functions from the library model specified
requires(libName,libID)=$requires('libName','libID')@tooltip:imports user functions from the library model specified and add associate all functions to libID
rewindDataSet(dsID)=$rewindDataSet('dsId')@tooltip:set the current row to the first row of the dataset
removeDataRow(...)=$removeDataRow('dsId','fieldName','fieldValue')@tooltip:remove rows from dataset with matching field name/field value
removeDataRowExcept(...)=$removeDataRowExcept('dsId','fieldName','fieldValue')@tooltip:remove all rows from dataset except rows that match field name/field value specified
resetSeqNum()=$resetSeqNum()@tooltip:reset system seqNum to 0
resolveUIMap(loc)=$resolveUIMap('loc')@tooltip:resolve uiMap path to an actual UI element locator.
saveStats(text)=$saveStats('text')@tooltip:saves current execution stats to db, returns execID
searchData(...)=$searchData('dsId','cond1','cond2')@tooltip:move dataset to the first matched row and return number of matched rows
searchDataRowIndex(...)=$searchDataRowIndex('dsId','cond1','cond2')@tooltip:move to the first matched row and return the row index of the row matched
sendMail(...)=$sendMail('fromAddr','toAddr','subj','msg')@tooltip:send an email
seqout(text)=$seqout('text')@tooltip:write the text to the seq.out
setAppURL(value)=$setAppURL('value')@tooltip:change AUT App/URL for current execution
setCurTransGuardHint(hint)=$setCurTransGuardHint('hint')@tooltip:set guard hint for the current transition
setCurTransSatisfyingHint(hint)=$setCurTransSatisfyingHint('hint')@tooltip:set satisfying hint for the current transition
setData(...)=$setData('ds','field','value')@tooltip:set the field value in the current row of the dataset
setDataSetRow(...)=$setDataSetRow('dsId','rowNum')@tooltip:move the current row index to the specified row
setDateFormatLocale('fmt','loc')=$setDateFormatLocale('date','locale')@tooltip:sets the default date format and locale
setFuncReturn(retVal)=$setFuncReturn('retVal')@tooltip:set the return value for current user function
setNextMCase(name)=$setNextMCase('mcaseName')@tooltip:sets the mcase for the next submodel to execute.
setMaxTraverseTimes(stateid,transid,num)=$setMaxTraverseTimes('stateid','transid','num')@tooltip:change the maximum traverse times for the transition - random/greedy sequencer only
setMinTraverseTimes(stateid,transid,num)=$setMinTraverseTimes('stateid','transid','num')@tooltip:change the minimum traverse times for the transition - random/greedy sequencer only
setPathVar(name,val)=$setPathVar('name','val')@tooltip:set path user variable
setStateResetURL(id,url)=$setStateResetURL('stateid','url')@tooltip:sets state attribute resetURL
setSeed(value)=$setSeed('value')@tooltip:sets the seed value for random number generator
setSeqNum(value)=$setSeqNum('value')@tooltip:set the system seqNum to the specified value
setSeqOutFile(file)=$setSeqOutFile('fileName')@tooltip:sets the sequence output file generated by MScript tag <seqout>
setTravVar(name,val)=$setTravVar('name','value')@tooltip:set the value for the traversal (local) variable specified
setVar(name,val)=$setVar('name','value')@tooltip:set the value for the user variable specified
setVar(name,val,model)=$setVar('name','value','model')@tooltip:set variable on another model execution running on the same server
setVarsFromDataSet(dsID,prefix)=$setVarsFromDataSet('dsID','prefix')@tooltip:set/create a series of variables from current row of data set
sleep(millis)=$sleep('milliseconds')@tooltip:sleep for milliseconds specified
snapScreen()=$snapScreen()@tooltip:take a snapshot of current window and save it to Screens tab
snapScreen(file)=$snapScreen('fileName')@tooltip:take a snapshot of current window and save it to the specified file
soundAlike(text1,text2)=$soundAlike('txt','txt')@tooltip:return true if two strings sound alike
soundAlike(text1,text2,conf)=$soundAlike('txt','txt','conf')@tooltip:return true if two strings sound alike within confidence level
spellAlike(text1,text2)=$spellAlike('txt','txt')@tooltip:return true if two strings spell alike
spellAlike(text1,text2,conf)=$spellAlike('txt','txt','conf')@tooltip:return true if two strings spell alike within confidence level
splitPiece(expr,delimiter,idx)=$splitPiece('expr','delimiter','idx')@tooltip:split the expression using the delimiter and return the nth piece specified
stackSize(varName)=$stackSize('varName')@tooltip:returns count of items in the stack/queue
stringLength(str)=$stringLength('str')@tooltip:returns number of characters in the string
substract(expr1,expr2)=$substract('expr1','expr2')@tooltip:performs substraction expr1 - expr2
substring(expr,idx)=$substring('expr1','idx')@tooltip:perform standard substring function as in java/javascript.
substring(expr,startIdx,endIdx)=$substring('expr1','startIdx','endIdx')@tooltip:perform standard substring function as in java/javascript.
time()=$time()@tooltip:return the current time
time(delta)=$time('delta')@tooltip:return the time calculated from the time delta expression
time(delta,format)=$time('delta','format')@tooltip:return the time calculated from the time delta expression and return the formatted time using the specified format
toLowerCase(txt)=$toLowerCase('txt')@tooltip:convert to lowercase
toUpperCase(txt)=$toUpperCase('txt')@tooltip:convert to uppercase
trace()=$trace()@tooltip:return the state/transition starting at the last model initial state leading up to the current state/transition
trace(num)=$trace('num')@tooltip:return the state/transition for the last specified number of traversals
trace(num,delim)=$trace('num','delim')@tooltip:return the state/transition for the last specified number of traversals
trim(text)=$trim('text')@tooltip:removes the leading and trailing space characters
twitterGet(user)=$twitterGet('username')@tooltip:retrieve twitter timeline messages from the specified user
twitterPost(msg)=$twitterPost('msg')@tooltip:tweet status update/message
waitForVarChanged(var)=$waitForVarChanged('var')@tooltip:wait for var change in value
waitForVarChanged(var,millis)=$waitForVarChanged('var','timeoutMillis')@tooltip:wait for var change in value up to timeout specified
waitForVarChanged(var,millis,newVal)=$waitForVarChanged('var','timeoutMillis','newValue')@tooltip:wait for var changed to the specified value
writeDataSet(name,file,delimiter)=$writeDataSet('ds','file','delimiter')@tooltip:write dataset out to a file
writeDataSet(name,file,delimiter,fieldList)=$writeDataSet('ds','file','delimiter','fieldList')@tooltip:write specified fields of a dataset out to a file
xor(expr,expr)=$xor('expr','expr')@tooltip:perform boolean logic XOR on two expressions
xor(expr,expr,expr)=$xor('expr','expr','expr')@tooltip:perform boolean logic XOR on three expressions